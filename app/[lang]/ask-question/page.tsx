/* eslint-disable @typescript-eslint/no-explicit-any */
'use client'
import React, { useState } from 'react';

export default function AskQuestionPage (){
  const [isModalOpen, setIsModalOpen] = useState(false);
  const [isDropdownOpen, setIsDropdownOpen] = useState(false);
  const [selectedFilter, setSelectedFilter] = useState('–í—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏');
  const [faqVisibleCount, setFaqVisibleCount] = useState(6); // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ 6 FAQ –∏–∑–Ω–∞—á–∞–ª—å–Ω–æ
  const [userQuestionsVisibleCount, setUserQuestionsVisibleCount] = useState(3); // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º 3 –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö –≤–æ–ø—Ä–æ—Å–∞
  const [formData, setFormData] = useState({
    name: '',
    email: '',
    subject: '',
    category: '',
    text: ''
  });

  const faqData = [
    {
      id: 1,
      question: "–ö–∞–∫ –ø–æ–¥–∞—Ç—å –∑–∞—è–≤–∫—É –Ω–∞ –∫—Ä–µ–¥–∏—Ç —á–µ—Ä–µ–∑ GroshiZaraz?",
      answer: "–î–ª—è –ø–æ–¥–∞—á–∏ –∑–∞—è–≤–∫–∏ –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –∫–æ—Ä–æ—Ç–∫—É—é –∞–Ω–∫–µ—Ç—É –Ω–∞ –Ω–∞—à–µ–º —Å–∞–π—Ç–µ, —É–∫–∞–∂–∏—Ç–µ –∂–µ–ª–∞–µ–º—É—é —Å—É–º–º—É –∏ —Å—Ä–æ–∫ –∫—Ä–µ–¥–∏—Ç–æ–≤–∞–Ω–∏—è. –ù–∞—à–∞ —Å–∏—Å—Ç–µ–º–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–æ–¥–±–µ—Ä–µ—Ç –ª—É—á—à–∏–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –æ—Ç –ø–∞—Ä—Ç–Ω–µ—Ä–æ–≤. –í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥—Ö–æ–¥—è—â–∏–π –≤–∞—Ä–∏–∞–Ω—Ç –∏ –ø–æ–¥–∞–π—Ç–µ –∑–∞—è–≤–∫—É –Ω–∞–ø—Ä—è–º—É—é –≤ –≤—ã–±—Ä–∞–Ω–Ω—É—é –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—é.",
      category: "–ü–æ–¥–∞—á–∞ –∑–∞—è–≤–∫–∏",
      isOpen: false,
      icon: "üìù",
      color: "from-blue-500 to-blue-600"
    },
    {
      id: 2,
      question: "–°–∫–æ–ª—å–∫–æ –≤—Ä–µ–º–µ–Ω–∏ –∑–∞–Ω–∏–º–∞–µ—Ç —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–µ –∑–∞—è–≤–∫–∏?",
      answer: "–í—Ä–µ–º—è —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏—è –∑–∞–≤–∏—Å–∏—Ç –æ—Ç –≤—ã–±—Ä–∞–Ω–Ω–æ–π —Ñ–∏–Ω–∞–Ω—Å–æ–≤–æ–π –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏. –ë–æ–ª—å—à–∏–Ω—Å—Ç–≤–æ –Ω–∞—à–∏—Ö –ø–∞—Ä—Ç–Ω–µ—Ä–æ–≤ –ø—Ä–∏–Ω–∏–º–∞—é—Ç —Ä–µ—à–µ–Ω–∏–µ –≤ —Ç–µ—á–µ–Ω–∏–µ 15-30 –º–∏–Ω—É—Ç. –ù–µ–∫–æ—Ç–æ—Ä—ã–µ –±–∞–Ω–∫–∏ –º–æ–≥—É—Ç —Ä–∞—Å—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å –∑–∞—è–≤–∫–∏ –¥–æ 24 —á–∞—Å–æ–≤.",
      category: "–°—Ä–æ–∫–∏",
      isOpen: false,
      icon: "‚è±Ô∏è",
      color: "from-yellow-400 to-yellow-500"
    },
    {
      id: 3,
      question: "–ö–∞–∫–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã –Ω—É–∂–Ω—ã –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∫—Ä–µ–¥–∏—Ç–∞?",
      answer: "–ë–∞–∑–æ–≤—ã–π –ø–∞–∫–µ—Ç –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –≤–∫–ª—é—á–∞–µ—Ç: –ø–∞—Å–ø–æ—Ä—Ç –≥—Ä–∞–∂–¥–∞–Ω–∏–Ω–∞ –£–∫—Ä–∞–∏–Ω—ã, –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–æ–Ω–Ω—ã–π –∫–æ–¥, —Å–ø—Ä–∞–≤–∫—É –æ –¥–æ—Ö–æ–¥–∞—Ö. –ù–µ–∫–æ—Ç–æ—Ä—ã–µ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ –º–æ–≥—É—Ç –∑–∞–ø—Ä–æ—Å–∏—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Å—É–º–º—ã –∫—Ä–µ–¥–∏—Ç–∞.",
      category: "–î–æ–∫—É–º–µ–Ω—Ç—ã",
      isOpen: false,
      icon: "üìÑ",
      color: "from-green-500 to-green-600"
    },
    {
      id: 4,
      question: "–ú–æ–∂–Ω–æ –ª–∏ –ø–æ–ª—É—á–∏—Ç—å –∫—Ä–µ–¥–∏—Ç —Å –ø–ª–æ—Ö–æ–π –∫—Ä–µ–¥–∏—Ç–Ω–æ–π –∏—Å—Ç–æ—Ä–∏–µ–π?",
      answer: "–î–∞, —Å—Ä–µ–¥–∏ –Ω–∞—à–∏—Ö –ø–∞—Ä—Ç–Ω–µ—Ä–æ–≤ –µ—Å—Ç—å –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏, –∫–æ—Ç–æ—Ä—ã–µ —Ä–∞–±–æ—Ç–∞—é—Ç —Å –∑–∞–µ–º—â–∏–∫–∞–º–∏ —Å –Ω–µ–≥–∞—Ç–∏–≤–Ω–æ–π –∫—Ä–µ–¥–∏—Ç–Ω–æ–π –∏—Å—Ç–æ—Ä–∏–µ–π. –û–¥–Ω–∞–∫–æ —É—Å–ª–æ–≤–∏—è –∫—Ä–µ–¥–∏—Ç–æ–≤–∞–Ω–∏—è –º–æ–≥—É—Ç –æ—Ç–ª–∏—á–∞—Ç—å—Å—è (–±–æ–ª–µ–µ –≤—ã—Å–æ–∫–∏–µ –ø—Ä–æ—Ü–µ–Ω—Ç–Ω—ã–µ —Å—Ç–∞–≤–∫–∏, –º–µ–Ω—å—à–∏–µ —Å—É–º–º—ã).",
      category: "–ö—Ä–µ–¥–∏—Ç–Ω–∞—è –∏—Å—Ç–æ—Ä–∏—è",
      isOpen: false,
      icon: "üìä",
      color: "from-purple-500 to-purple-600"
    },
    {
      id: 5,
      question: "–í–∑–∏–º–∞–µ—Ç –ª–∏ GroshiZaraz –∫–æ–º–∏—Å—Å–∏—é –∑–∞ —Å–≤–æ–∏ —É—Å–ª—É–≥–∏?",
      answer: "–ù–µ—Ç, –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –Ω–∞—à–µ–≥–æ —Å–µ—Ä–≤–∏—Å–∞ –ø–æ–ª–Ω–æ—Å—Ç—å—é –±–µ—Å–ø–ª–∞—Ç–Ω–æ –¥–ª—è –∫–ª–∏–µ–Ω—Ç–æ–≤. –ú—ã –ø–æ–ª—É—á–∞–µ–º –≤–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏–µ –æ—Ç –ø–∞—Ä—Ç–Ω–µ—Ä–æ–≤ –∑–∞ –ø—Ä–∏–≤–ª–µ—á–µ–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç–æ–≤, –Ω–æ —ç—Ç–æ –Ω–µ –≤–ª–∏—è–µ—Ç –Ω–∞ —Å—Ç–æ–∏–º–æ—Å—Ç—å –∫—Ä–µ–¥–∏—Ç–∞ –¥–ª—è –∑–∞–µ–º—â–∏–∫–∞.",
      category: "–°—Ç–æ–∏–º–æ—Å—Ç—å",
      isOpen: false,
      icon: "üí∞",
      color: "from-red-500 to-red-600"
    },
    {
      id: 6,
      question: "–ö–∞–∫ –º–æ–∂–Ω–æ –ø–æ–≥–∞—Å–∏—Ç—å –∫—Ä–µ–¥–∏—Ç –¥–æ—Å—Ä–æ—á–Ω–æ?",
      answer: "–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –¥–æ—Å—Ä–æ—á–Ω–æ–≥–æ –ø–æ–≥–∞—à–µ–Ω–∏—è –∑–∞–≤–∏—Å–∏—Ç –æ—Ç —É—Å–ª–æ–≤–∏–π –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π —Ñ–∏–Ω–∞–Ω—Å–æ–≤–æ–π –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏. –ë–æ–ª—å—à–∏–Ω—Å—Ç–≤–æ –Ω–∞—à–∏—Ö –ø–∞—Ä—Ç–Ω–µ—Ä–æ–≤ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è—é—Ç —Ç–∞–∫—É—é –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –Ω–∞–ø—Ä—è–º—É—é –∫ –∫—Ä–µ–¥–∏—Ç–æ—Ä—É –¥–ª—è —É—Ç–æ—á–Ω–µ–Ω–∏—è —É—Å–ª–æ–≤–∏–π.",
      category: "–ü–æ–≥–∞—à–µ–Ω–∏–µ",
      isOpen: false,
      icon: "‚úÖ",
      color: "from-teal-500 to-teal-600"
    },
    {
      id: 7,
      question: "–ß—Ç–æ –¥–µ–ª–∞—Ç—å, –µ—Å–ª–∏ –Ω–µ –º–æ–≥—É –≤–æ–≤—Ä–µ–º—è –ø–æ–≥–∞—Å–∏—Ç—å –∫—Ä–µ–¥–∏—Ç?",
      answer: "–ù–µ–º–µ–¥–ª–µ–Ω–Ω–æ —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –≤–∞—à–∏–º –∫—Ä–µ–¥–∏—Ç–æ—Ä–æ–º –¥–ª—è –æ–±—Å—É–∂–¥–µ–Ω–∏—è –≤–æ–∑–º–æ–∂–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤. –ú–Ω–æ–≥–∏–µ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è—é—Ç –æ—Ç—Å—Ä–æ—á–∫—É –∏–ª–∏ —Ä–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏–∑–∞—Ü–∏—é. –ù–µ –∏–≥–Ω–æ—Ä–∏—Ä—É–π—Ç–µ –ø—Ä–æ–±–ª–µ–º—É - —ç—Ç–æ –º–æ–∂–µ—Ç –ø—Ä–∏–≤–µ—Å—Ç–∏ –∫ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–º —à—Ç—Ä–∞—Ñ–∞–º.",
      category: "–ü—Ä–æ–±–ª–µ–º—ã —Å –ø–æ–≥–∞—à–µ–Ω–∏–µ–º",
      isOpen: false,
      icon: "‚ö†Ô∏è",
      color: "from-orange-500 to-orange-600"
    },
    {
      id: 8,
      question: "–ë–µ–∑–æ–ø–∞—Å–Ω–æ –ª–∏ –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å –ª–∏—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —á–µ—Ä–µ–∑ –≤–∞—à —Å–∞–π—Ç?",
      answer: "–î–∞, –º—ã –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –∏ —Å–æ–±–ª—é–¥–∞–µ–º –≤—Å–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –ø–æ –∑–∞—â–∏—Ç–µ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏. –í—Å–µ –¥–∞–Ω–Ω—ã–µ –ø–µ—Ä–µ–¥–∞—é—Ç—Å—è –ø–æ –∑–∞—â–∏—â–µ–Ω–Ω–æ–º—É —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—é –∏ –Ω–µ –ø–µ—Ä–µ–¥–∞—é—Ç—Å—è —Ç—Ä–µ—Ç—å–∏–º –ª–∏—Ü–∞–º –±–µ–∑ –≤–∞—à–µ–≥–æ —Å–æ–≥–ª–∞—Å–∏—è.",
      category: "–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å",
      isOpen: false,
      icon: "üîí",
      color: "from-indigo-500 to-indigo-600"
    },
    {
      id: 9,
      question: "–ú–æ–∂–Ω–æ –ª–∏ –ø–æ–¥–∞—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –∑–∞—è–≤–æ–∫ –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ?",
      answer: "–î–∞, –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ–¥–∞—Ç—å –∑–∞—è–≤–∫–∏ –≤ –Ω–µ—Å–∫–æ–ª—å–∫–æ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–π –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ, —á—Ç–æ–±—ã —É–≤–µ–ª–∏—á–∏—Ç—å —à–∞–Ω—Å—ã –Ω–∞ –æ–¥–æ–±—Ä–µ–Ω–∏–µ. –û–¥–Ω–∞–∫–æ –ø–æ–º–Ω–∏—Ç–µ, —á—Ç–æ –∫–∞–∂–¥–∞—è –∑–∞—è–≤–∫–∞ –º–æ–∂–µ—Ç –ø–æ–≤–ª–∏—è—Ç—å –Ω–∞ –≤–∞—à—É –∫—Ä–µ–¥–∏—Ç–Ω—É—é –∏—Å—Ç–æ—Ä–∏—é.",
      category: "–ü–æ–¥–∞—á–∞ –∑–∞—è–≤–∫–∏",
      isOpen: false,
      icon: "üéØ",
      color: "from-pink-500 to-pink-600"
    },
    {
      id: 10,
      question: "–†–∞–±–æ—Ç–∞–µ—Ç –ª–∏ GroshiZaraz –≤ –≤—ã—Ö–æ–¥–Ω—ã–µ –¥–Ω–∏?",
      answer: "–ù–∞—à —Å–∞–π—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç –∫—Ä—É–≥–ª–æ—Å—É—Ç–æ—á–Ω–æ, –∑–∞—è–≤–∫–∏ –º–æ–∂–Ω–æ –ø–æ–¥–∞–≤–∞—Ç—å –≤ –ª—é–±–æ–µ –≤—Ä–µ–º—è. –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç 24/7. –û–¥–Ω–∞–∫–æ —Ä–µ—à–µ–Ω–∏—è –ø–æ –∑–∞—è–≤–∫–∞–º –ø–∞—Ä—Ç–Ω–µ—Ä—ã –ø—Ä–∏–Ω–∏–º–∞—é—Ç –≤ —Ä–∞–±–æ—á–∏–µ —á–∞—Å—ã.",
      category: "–†–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã",
      isOpen: false,
      icon: "‚è∞",
      color: "from-cyan-500 to-cyan-600"
    }
  ];

  // –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –≤–æ–ø—Ä–æ—Å—ã (–≤ —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ —ç—Ç–æ –±—É–¥–µ—Ç –∏–∑ API)
  const [userQuestions, setUserQuestions] = useState([
    {
      id: 1,
      question: "–ú–æ–∂–Ω–æ –ª–∏ –ø–æ–ª—É—á–∏—Ç—å –∫—Ä–µ–¥–∏—Ç –±–µ–∑ —Å–ø—Ä–∞–≤–∫–∏ –æ –¥–æ—Ö–æ–¥–∞—Ö?",
      author: "–ê–ª–µ–∫—Å–∞–Ω–¥—Ä –ú.",
      date: "2 —á–∞—Å–∞ –Ω–∞–∑–∞–¥",
      category: "–î–æ–∫—É–º–µ–Ω—Ç—ã",
      hasAnswer: true,
      answersCount: 2,
      icon: "üë§",
      color: "from-blue-500 to-blue-600"
    },
    {
      id: 2,
      question: "–ö–∞–∫–∏–µ –±–∞–Ω–∫–∏ –¥–∞—é—Ç –∫—Ä–µ–¥–∏—Ç—ã —Å 18 –ª–µ—Ç?",
      author: "–ú–∞—Ä–∏—è –ö.",
      date: "5 —á–∞—Å–æ–≤ –Ω–∞–∑–∞–¥",
      category: "–í–æ–∑—Ä–∞—Å—Ç–Ω—ã–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è",
      hasAnswer: false,
      answersCount: 0,
      icon: "üéì",
      color: "from-green-500 to-green-600"
    },
    {
      id: 3,
      question: "–í–ª–∏—è–µ—Ç –ª–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø—Ä–æ—Å–æ–≤ –Ω–∞ –∫—Ä–µ–¥–∏—Ç–Ω—É—é –∏—Å—Ç–æ—Ä–∏—é?",
      author: "–ò–≤–∞–Ω –ü.",
      date: "1 –¥–µ–Ω—å –Ω–∞–∑–∞–¥",
      category: "–ö—Ä–µ–¥–∏—Ç–Ω–∞—è –∏—Å—Ç–æ—Ä–∏—è",
      hasAnswer: true,
      answersCount: 4,
      icon: "üìà",
      color: "from-purple-500 to-purple-600"
    },
    {
      id: 4,
      question: "–ú–æ–∂–Ω–æ –ª–∏ –ø–µ—Ä–µ–æ—Ñ–æ—Ä–º–∏—Ç—å –∫—Ä–µ–¥–∏—Ç –Ω–∞ —Å—É–ø—Ä—É–≥–∞?",
      author: "–ï–ª–µ–Ω–∞ –í.",
      date: "2 –¥–Ω—è –Ω–∞–∑–∞–¥",
      category: "–ü–µ—Ä–µ–æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ",
      hasAnswer: false,
      answersCount: 0,
      icon: "üë®‚Äçüë©‚Äçüëß",
      color: "from-pink-500 to-pink-600"
    },
    {
      id: 5,
      question: "–ö–∞–∫–∏–µ —à—Ç—Ä–∞—Ñ—ã –∑–∞ –ø—Ä–æ—Å—Ä–æ—á–∫—É –ø–ª–∞—Ç–µ–∂–∞?",
      author: "–î–º–∏—Ç—Ä–∏–π –õ.",
      date: "3 –¥–Ω—è –Ω–∞–∑–∞–¥",
      category: "–®—Ç—Ä–∞—Ñ—ã",
      hasAnswer: true,
      answersCount: 3,
      icon: "‚öñÔ∏è",
      color: "from-red-500 to-red-600"
    },
    {
      id: 6,
      question: "–†–∞–±–æ—Ç–∞—é—Ç –ª–∏ –±–∞–Ω–∫–∏ —Å –§–û–ü?",
      author: "–û–ª—å–≥–∞ –°.",
      date: "1 –Ω–µ–¥–µ–ª—é –Ω–∞–∑–∞–¥",
      category: "–§–û–ü",
      hasAnswer: true,
      answersCount: 1,
      icon: "üíº",
      color: "from-teal-500 to-teal-600"
    }
  ]);

  const [faqItems, setFaqItems] = useState(faqData);

  const categories = [
    '–í—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏',
    '–ü–æ–¥–∞—á–∞ –∑–∞—è–≤–∫–∏',
    '–°—Ä–æ–∫–∏',
    '–î–æ–∫—É–º–µ–Ω—Ç—ã',
    '–ö—Ä–µ–¥–∏—Ç–Ω–∞—è –∏—Å—Ç–æ—Ä–∏—è',
    '–°—Ç–æ–∏–º–æ—Å—Ç—å',
    '–ü–æ–≥–∞—à–µ–Ω–∏–µ',
    '–ü—Ä–æ–±–ª–µ–º—ã —Å –ø–æ–≥–∞—à–µ–Ω–∏–µ–º',
    '–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å',
    '–†–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã'
  ];

  const filteredFAQ = faqItems.filter(item => 
    selectedFilter === '–í—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏' || item.category === selectedFilter
  );

  const handleInputChange = (e: { target: { name: any; value: any; }; }) => {
    setFormData({
      ...formData,
      [e.target.name]: e.target.value
    });
  };

  const handleSubmit = () => {
    if (formData.name && formData.email && formData.subject && formData.category && formData.text) {
      // –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–π –≤–æ–ø—Ä–æ—Å –≤ —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö –≤–æ–ø—Ä–æ—Å–æ–≤
      const newQuestion = {
        id: userQuestions.length + 1,
        question: formData.subject,
        author: formData.name,
        date: "—Ç–æ–ª—å–∫–æ —á—Ç–æ",
        category: formData.category,
        hasAnswer: false,
        answersCount: 0,
        icon: "‚ùì",
        color: "from-gray-500 to-gray-600"
      };
      
      setUserQuestions([newQuestion, ...userQuestions]);
      setIsModalOpen(false);
      setFormData({ name: '', email: '', subject: '', category: '', text: '' });
    } else {
      alert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è');
    }
  };

  const toggleFAQ = (id: number) => {
    setFaqItems(faqItems.map(item => 
      item.id === id ? { ...item, isOpen: !item.isOpen } : item
    ));
  };

  const handleQuestionClick = (questionId: number) => {
    // –ó–¥–µ—Å—å –±—É–¥–µ—Ç —Ä–µ–¥–∏—Ä–µ–∫—Ç –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É —Å –≤–æ–ø—Ä–æ—Å–æ–º –∏ –æ—Ç–≤–µ—Ç–∞–º–∏
    console.log(`–ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤–æ–ø—Ä–æ—Å–∞ ${questionId}`);
    // window.location.href = `/questions/${questionId}`;
  };

  return (
    <div className="min-h-screen bg-gradient-to-br from-gray-50 to-white">
      <div className="max-w-6xl mx-auto px-4 py-8">
        {/* Header */}
        <div className="text-center mb-16">
          <h1 className="text-4xl md:text-5xl font-bold text-gray-800 mb-4 relative inline-block">
            –ß–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã
            <div className="absolute -bottom-2 left-1/2 transform -translate-x-1/2 w-20 h-1 bg-gradient-to-r from-blue-500 to-yellow-400 rounded-full"></div>
          </h1>
          <p className="text-gray-600 text-lg max-w-2xl mx-auto">
            –ù–∞–π–¥–∏—Ç–µ –æ—Ç–≤–µ—Ç—ã –Ω–∞ –ø–æ–ø—É–ª—è—Ä–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã –∏–ª–∏ –∑–∞–¥–∞–π—Ç–µ —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å –Ω–∞—à–∏–º —ç–∫—Å–ø–µ—Ä—Ç–∞–º
          </p>
        </div>

        {/* Controls */}
        <div className="flex flex-col sm:flex-row justify-between items-center mb-12 gap-4">
          {/* Filter Dropdown */}
       
<div></div>
          {/* Ask Question Button */}
          <button
            onClick={() => setIsModalOpen(true)}
            className="bg-gradient-to-r cursor-pointer from-blue-500 to-yellow-400 text-white px-8 py-3 rounded-2xl font-semibold flex items-center gap-3 hover:shadow-lg transition-all duration-300 hover:scale-105"
          >
            <span className="text-xl">?</span>
            –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å
          </button>
        </div>

        {/* User Questions Section */}
        <div className="mb-16">
          <div className="text-center mb-8">
            <h2 className="text-3xl font-bold text-gray-800 mb-4 relative inline-block">
              –í–æ–ø—Ä–æ—Å—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
              <div className="absolute -bottom-2 left-1/2 transform -translate-x-1/2 w-20 h-1 bg-gradient-to-r from-green-500 to-teal-400 rounded-full"></div>
            </h2>
            <p className="text-gray-600 text-lg max-w-2xl mx-auto">
              –ê–∫—Ç—É–∞–ª—å–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã –æ—Ç –Ω–∞—à–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
            </p>
          </div>

          <div className="grid gap-4">
            {userQuestions.slice(0, userQuestionsVisibleCount).map((question, index) => (
              <div 
                key={question.id} 
                className="bg-white rounded-2xl shadow-lg hover:shadow-xl transition-all duration-300 border border-gray-100 p-6 group"
                style={{ animationDelay: `${index * 0.1}s` }}
              >
                <div className="flex items-start gap-4">
                  {/* Icon */}
                  <div className={`w-12 h-12 bg-gradient-to-br ${question.color} rounded-xl flex items-center justify-center text-white text-xl group-hover:scale-110 transition-transform duration-300 flex-shrink-0`}>
                    {question.icon}
                  </div>
                  
                  {/* Content */}
                  <div className="flex-1">
                    <div className="flex items-center gap-2 mb-2">
                      <span className="text-sm font-medium text-gray-500">{question.author}</span>
                      <span className="text-xs text-gray-400">‚Ä¢</span>
                      <span className="text-sm text-gray-400">{question.date}</span>
                      <span className={`text-xs px-2 py-1 rounded-full font-medium bg-gradient-to-r ${question.color} text-white`}>
                        {question.category}
                      </span>
                    </div>
                    
                    <h3 className="font-semibold text-gray-800 mb-3 text-lg group-hover:text-blue-600 transition-colors duration-300">
                      {question.question}
                    </h3>
                    
                    <div className="flex items-center justify-between">
                      <div className="flex items-center gap-4">
                        <span className={`text-sm px-3 py-1 rounded-full font-medium ${question.hasAnswer ? 'bg-green-100 text-green-700' : 'bg-yellow-100 text-yellow-700'}`}>
                          {question.hasAnswer ? '‚úÖ –ï—Å—Ç—å –æ—Ç–≤–µ—Ç' : '‚è≥ –û–∂–∏–¥–∞–µ—Ç –æ—Ç–≤–µ—Ç–∞'}
                        </span>
                        
                        {question.answersCount > 0 && (
                          <span className="text-sm text-gray-500">
                            {question.answersCount} –æ—Ç–≤–µ—Ç{question.answersCount > 1 ? '–∞' : ''}
                          </span>
                        )}
                      </div>
                      
                      <button
                        onClick={() => handleQuestionClick(question.id)}
                        className="bg-gradient-to-r from-blue-500 to-blue-600 text-white px-4 py-2 rounded-xl text-sm font-medium hover:shadow-lg transition-all duration-300 hover:scale-105"
                      >
                        –û—Ç–≤–µ—Ç—ã
                      </button>
                    </div>
                  </div>
                </div>
              </div>
            ))}
          </div>

          {/* Show More Button for User Questions */}
          {userQuestionsVisibleCount < userQuestions.length && (
            <div className="text-center mt-8">
              <button
                onClick={() => setUserQuestionsVisibleCount(prev => prev + 3)}
                className="bg-gradient-to-r from-green-500 to-teal-400 text-white px-8 py-3 rounded-2xl font-semibold hover:shadow-lg transition-all duration-300 hover:scale-105"
              >
                –ü–æ–∫–∞–∑–∞—Ç—å –µ—â–µ +3
              </button>
            </div>
          )}
        </div>

        {/* FAQ Section */}
        <div className="mb-16">
          <div className="text-center mb-12">
            <h2 className="text-3xl md:text-4xl font-bold text-gray-800 mb-4 relative inline-block">
              –ü–æ–ø—É–ª—è—Ä–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã
              <div className="absolute -bottom-2 left-1/2 transform -translate-x-1/2 w-24 h-1 bg-gradient-to-r from-blue-500 to-yellow-400 rounded-full"></div>
            </h2>
            <p className="text-gray-600 text-lg max-w-2xl mx-auto">
              –°–∞–º—ã–µ —á–∞—Å—Ç—ã–µ –≤–æ–ø—Ä–æ—Å—ã –Ω–∞—à–∏—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤ —Å –ø–æ–¥—Ä–æ–±–Ω—ã–º–∏ –æ—Ç–≤–µ—Ç–∞–º–∏
            </p>
          </div>
          <div className="relative">
            <button
              onClick={() => setIsDropdownOpen(!isDropdownOpen)}
              className="bg-white cursor-pointer border-2 border-gray-200 rounded-2xl px-6 py-3 flex items-center gap-3 hover:border-blue-300 transition-all duration-200 shadow-sm"
            >
              <span className="text-gray-700 font-medium">{selectedFilter}</span>
              <svg className={`w-4 h-4 text-gray-500 transition-transform duration-200 ${isDropdownOpen ? 'rotate-180' : ''}`} fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M19 9l-7 7-7-7" />
              </svg>
            </button>
            
            {isDropdownOpen && (
              <div className="absolute top-full left-0 mt-2 w-64 bg-white rounded-2xl shadow-lg border border-gray-200 z-10">
                {categories.map((category) => (
                  <button
                    key={category}
                    onClick={() => {
                      setSelectedFilter(category);
                      setIsDropdownOpen(false);
                    }}
                    className="w-full text-left px-4 py-2 hover:bg-gray-50 first:rounded-t-2xl last:rounded-b-2xl text-gray-700 transition-colors duration-200"
                  >
                    {category}
                  </button>
                ))}
              </div>
            )}
          </div>
          <div className="grid gap-6 mt-3">
            {filteredFAQ.slice(0, faqVisibleCount).map((item, index) => (
              <div 
                key={item.id} 
                className="group"
                style={{ animationDelay: `${index * 0.1}s` }}
              >
                <div className="bg-white rounded-2xl shadow-lg hover:shadow-xl transition-all duration-300 border border-gray-100 overflow-hidden">
                  <button
                    onClick={() => toggleFAQ(item.id)}
                    className="w-full p-6 text-left hover:bg-gradient-to-r hover:from-gray-50 hover:to-blue-50 transition-all duration-300 flex items-center gap-4"
                  >
                    {/* Icon */}
                    <div className={`w-12 h-12 bg-gradient-to-br ${item.color} rounded-xl flex items-center justify-center text-white text-xl group-hover:scale-110 transition-transform duration-300 flex-shrink-0`}>
                      {item.icon}
                    </div>
                    
                    {/* Content */}
                    <div className="flex-1">
                      <h3 className="font-semibold text-gray-800 mb-2 text-lg group-hover:text-blue-600 transition-colors duration-300">
                        {item.question}
                      </h3>
                      <span className={`text-xs bg-gradient-to-r ${item.color} text-white px-3 py-1 rounded-full font-medium`}>
                        {item.category}
                      </span>
                    </div>
                    
                    {/* Arrow */}
                    <div className="flex-shrink-0">
                      <svg 
                        className={`w-6 h-6 text-gray-400 group-hover:text-blue-500 transition-all duration-300 ${item.isOpen ? 'rotate-180' : ''}`} 
                        fill="none" 
                        stroke="currentColor" 
                        viewBox="0 0 24 24"
                      >
                        <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M19 9l-7 7-7-7" />
                      </svg>
                    </div>
                  </button>
                  
                  {/* Answer */}
                  {item.isOpen && (
                    <div className="px-6 pb-6">
                      <div className="ml-16 bg-gradient-to-r from-gray-50 to-blue-50 rounded-xl p-4 border-l-4 border-blue-500">
                        <p className="text-gray-700 leading-relaxed">{item.answer}</p>
                      </div>
                    </div>
                  )}
                </div>
              </div>
            ))}
          </div>

          {/* Show More Button for FAQ */}
          {faqVisibleCount < filteredFAQ.length && (
            <div className="text-center mt-8">
              <button
                onClick={() => setFaqVisibleCount(prev => prev + 6)}
                className="bg-gradient-to-r from-blue-500 to-yellow-400 text-white px-8 py-3 rounded-2xl font-semibold hover:shadow-lg transition-all duration-300 hover:scale-105"
              >
                –ü–æ–∫–∞–∑–∞—Ç—å –µ—â–µ +6
              </button>
            </div>
          )}
        </div>

        {/* Contact Section */}
        <div className="bg-gradient-to-br from-blue-500 to-blue-600 rounded-3xl p-8 text-white shadow-xl">
          <div className="text-center">
            <h2 className="text-3xl font-bold mb-4">–ù–µ –Ω–∞—à–ª–∏ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å?</h2>
            <p className="text-xl text-blue-100 mb-8 max-w-2xl mx-auto">
              –°–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞—à–µ–π —Å–ª—É–∂–±–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–∏ - –º—ã —Ä–∞–±–æ—Ç–∞–µ–º 24/7 –∏ –≥–æ—Ç–æ–≤—ã –ø–æ–º–æ—á—å –≤–∞–º
            </p>
            
            <div className="grid md:grid-cols-3 gap-6 max-w-4xl mx-auto">
              <div className="bg-white/10 rounded-2xl p-6 backdrop-blur-sm hover:bg-white/20 transition-all duration-300">
                <div className="text-3xl mb-4">üìû</div>
                <h3 className="text-lg font-semibold mb-2">–¢–µ–ª–µ—Ñ–æ–Ω</h3>
                <p className="text-blue-100">+38 (044) 555-77-99</p>
              </div>
              
              <div className="bg-white/10 rounded-2xl p-6 backdrop-blur-sm hover:bg-white/20 transition-all duration-300">
                <div className="text-3xl mb-4">üìß</div>
                <h3 className="text-lg font-semibold mb-2">Email</h3>
                <p className="text-blue-100">support@groshizaraz.ua</p>
              </div>
              
              <div className="bg-white/10 rounded-2xl p-6 backdrop-blur-sm hover:bg-white/20 transition-all duration-300">
                <div className="text-3xl mb-4">üí¨</div>
                <h3 className="text-lg font-semibold mb-2">–û–Ω–ª–∞–π–Ω-—á–∞—Ç</h3>
                <p className="text-blue-100">–î–æ—Å—Ç—É–ø–µ–Ω 24/7</p>
              </div>
            </div>
          </div>
        </div>

        {/* Modal */}
        {isModalOpen && (
          <div className="fixed inset-0 bg-black/40 backdrop-blur-sm flex items-center justify-center z-50 p-4">
            <div className="bg-white rounded-3xl p-8 max-w-md w-full max-h-[90vh] overflow-y-auto shadow-2xl">
              <div className="flex justify-between items-center mb-6">
                <h3 className="text-2xl font-bold text-gray-800">–ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å</h3>
                <button
                  onClick={() => setIsModalOpen(false)}
                  className="w-8 h-8 bg-gray-100 rounded-full flex items-center justify-center hover:bg-gray-200 transition-colors"
                >
                  √ó
                </button>
              </div>
              
              <div className="space-y-6">
                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-2">
                    –í–∞—à–µ –∏–º—è
                  </label>
                  <input
                    type="text"
                    name="name"
                    value={formData.name}
                    onChange={handleInputChange}
                    className="w-full px-4 py-3 border border-gray-300 rounded-2xl focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent"
                    placeholder="–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è"
                  />
                </div>
                
                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-2">
                    Email
                  </label>
                  <input
                    type="email"
                    name="email"
                    value={formData.email}
                    onChange={handleInputChange}
                    className="w-full px-4 py-3 border border-gray-300 rounded-2xl focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent"
                    placeholder="–í–≤–µ–¥–∏—Ç–µ –≤–∞—à email"
                  />
                </div>
                
                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-2">
                    –¢–µ–º–∞ –≤–æ–ø—Ä–æ—Å–∞
                  </label>
                  <input
                    type="text"
                    name="subject"
                    value={formData.subject}
                    onChange={handleInputChange}
                    className="w-full px-4 py-3 border border-gray-300 rounded-2xl focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent"
                    placeholder="–ö—Ä–∞—Ç–∫–æ –æ–ø–∏—à–∏—Ç–µ —Ç–µ–º—É"
                  />
                </div>
                
                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-2">
                    –ö–∞—Ç–µ–≥–æ—Ä–∏—è
                  </label>
                  <select
                    name="category"
                    value={formData.category}
                    onChange={handleInputChange}
                    className="w-full px-4 py-3 border border-gray-300 rounded-2xl focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent"
                  >
                    <option value="">–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é</option>
                    <option value="–ü–æ–¥–∞—á–∞ –∑–∞—è–≤–∫–∏">–ü–æ–¥–∞—á–∞ –∑–∞—è–≤–∫–∏</option>
                    <option value="–°—Ä–æ–∫–∏">–°—Ä–æ–∫–∏</option>
                    <option value="–î–æ–∫—É–º–µ–Ω—Ç—ã">–î–æ–∫—É–º–µ–Ω—Ç—ã</option>
                    <option value="–ö—Ä–µ–¥–∏—Ç–Ω–∞—è –∏—Å—Ç–æ—Ä–∏—è">–ö—Ä–µ–¥–∏—Ç–Ω–∞—è –∏—Å—Ç–æ—Ä–∏—è</option>
                    <option value="–°—Ç–æ–∏–º–æ—Å—Ç—å">–°—Ç–æ–∏–º–æ—Å—Ç—å</option>
                    <option value="–ü–æ–≥–∞—à–µ–Ω–∏–µ">–ü–æ–≥–∞—à–µ–Ω–∏–µ</option>
                    <option value="–ü—Ä–æ–±–ª–µ–º—ã —Å –ø–æ–≥–∞—à–µ–Ω–∏–µ–º">–ü—Ä–æ–±–ª–µ–º—ã —Å –ø–æ–≥–∞—à–µ–Ω–∏–µ–º</option>
                    <option value="–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å">–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å</option>
                    <option value="–†–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã">–†–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã</option>
                    <option value="–î—Ä—É–≥–æ–µ">–î—Ä—É–≥–æ–µ</option>
                  </select>
                </div>
                
                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-2">
                    –í–∞—à –≤–æ–ø—Ä–æ—Å
                  </label>
                  <textarea
                    name="text"
                    value={formData.text}
                    onChange={handleInputChange}
                    rows={4} 
                    className="w-full px-4 py-3 border border-gray-300 rounded-2xl focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent resize-none"
                    placeholder="–û–ø–∏—à–∏—Ç–µ –≤–∞—à –≤–æ–ø—Ä–æ—Å –ø–æ–¥—Ä–æ–±–Ω–æ..."
                  />
                </div>
                
                <button
                  onClick={handleSubmit}
                  className="w-full bg-gradient-to-r from-blue-500 to-yellow-400 text-white py-3 rounded-2xl font-semibold hover:shadow-lg transition-all duration-300 hover:scale-105"
                >
                  –û—Ç–ø—Ä–∞–≤–∏—Ç—å –≤–æ–ø—Ä–æ—Å
                </button>
              </div>
            </div>
          </div>
        )}
      </div>
    </div>
  );
};